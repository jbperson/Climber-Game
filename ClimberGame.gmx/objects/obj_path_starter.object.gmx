<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_circle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Remember, this object MUST be created after each of the path points have been created in-world

associated_path = path_add()
path_set_closed(associated_path,false)
global.temp_associated_path = associated_path
//global.temp_destroy_path_count++ // increment number of paths to destroy
global.temp_was_inside_world = false

global.path_inside_world = false

with(collision_point(x,y,obj_block_path_point_parent,false,true))
{
    if(collision_point(x,y,obj_world,true,true) != noone)
        global.temp_was_inside_world = true
    else
        global.temp_was_inside_world = false

    associated_path = global.temp_associated_path
        
    event_perform(ev_other,ev_user0)    // call path creation code. We do this before adding the path to the list because if we append two paths together, we want to add the appended path and not the pre-appended path
    
    //global.path_list[global.path_list_count] = associated_path
    
    //show_message("Path List Entry " + string(global.path_list_count) + ": " + string(global.path_list[global.path_list_count]))
    
    //global.path_list_count++
    
    
    
    //ds_list_insert(global.path_list,global.temp_path_list_position,associated_path)
    //global.temp_path_list_position++
} 

with(collision_point(x,y,obj_block_path_point_climb_parent,false,true))
{
    if(collision_point(x,y,obj_world,true,true) != noone)
        global.temp_was_inside_world = true
    else
        global.temp_was_inside_world = false

    associated_path = global.temp_associated_path
      
    event_perform(ev_other,ev_user0)
    
    //global.path_list[global.path_list_count] = associated_path
    //global.path_list_count++

    //ds_list_insert(global.path_list,global.temp_path_list_position,associated_path)
    //global.temp_path_list_position++
    
    ds_map_add(global.path_map_climbable,associated_path,1) //  if there is a climbing path, add it to the climbable path map
}

with(collision_point(x,y,obj_bad_block_parent,false,true))
{
    placed_into_path = true
    event_perform(ev_other,ev_user1)
    make_bad_blocks()
}

instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
